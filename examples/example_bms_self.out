
********************************************************************************
********************************************************************************
*************************** Code quality of ../bms/ ****************************
********************************************************************************
********************************************************************************

================================================================================
* A. Unit checks / B. Module checks
================================================================================

>> File: ../bms/architecturerules.py
================================================================================

A. units
--------------------------------------------------------------------------------

- method:   similar_size_components()
 > args: 
 - rule 1: short units (max 15 loc)
  - (4, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (0, True)

- method:   _count_loc_file()
 > args: fname
 - rule 1: short units (max 15 loc)
  - (2, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

- method:   total_size_code_base()
 > args: 
 - rule 1: short units (max 15 loc)
  - (2, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (0, True)

- method:   num_files_codebase()
 > args: 
 - rule 1: short units (max 15 loc)
  - (3, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (0, True)

- method:   __init__()
 > args: code
 - rule 1: short units (max 15 loc)
  - (4, True)
 - rule 2: simple units (max 4 branch points)
  - (1, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

- method:   _gini()
 > args: list_of_values
 - rule 1: short units (max 15 loc)
  - (7, True)
 - rule 2: simple units (max 4 branch points)
  - (1, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

B. modules
--------------------------------------------------------------------------------
 - rule 5: loose coupling modules
  - #TODO
 - rule 6: loose coupling component architecture
  - #TODO



>> File: ../bms/unitrules.py
================================================================================

A. units
--------------------------------------------------------------------------------

- method:   simple_units()
 > args: 
 - rule 1: short units (max 15 loc)
  - (6, True)
 - rule 2: simple units (max 4 branch points)
  - (1, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (0, True)

- method:   _add_count()
 > args: branch_strings, li
 - rule 1: short units (max 15 loc)
  - (6, True)
 - rule 2: simple units (max 4 branch points)
  - (3, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (2, True)

- method:   _clean_lines()
 > args: 
 - rule 1: short units (max 15 loc)
  - (11, True)
 - rule 2: simple units (max 4 branch points)
  - (4, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (0, True)

- method:   small_interfaces()
 > args: 
 - rule 1: short units (max 15 loc)
  - (3, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (0, True)

- method:   short_units()
 > args: 
 - rule 1: short units (max 15 loc)
  - (3, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (0, True)

- method:   __init__()
 > args: data
 - rule 1: short units (max 15 loc)
  - (3, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

B. modules
--------------------------------------------------------------------------------
 - rule 5: loose coupling modules
  - #TODO
 - rule 6: loose coupling component architecture
  - #TODO



>> File: ../bms/main.py
================================================================================

A. units
--------------------------------------------------------------------------------

- method: create_header()
 > args: s
 - rule 1: short units (max 15 loc)
  - (4, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

- method: get_methods()
 > args: lines
 - rule 1: short units (max 15 loc)
  - (15, True)
 - rule 2: simple units (max 4 branch points)
  - (3, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

- method: load_files()
 > args: path
 - rule 1: short units (max 15 loc)
  - (2, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

- method: file_to_list()
 > args: fname
 - rule 1: short units (max 15 loc)
  - (2, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

- method: parse_files()
 > args: files
 - rule 1: short units (max 15 loc)
  - (4, True)
 - rule 2: simple units (max 4 branch points)
  - (1, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

- method: apply_rules()
 > args: code
 - rule 1: short units (max 15 loc)
  - (38, False)                                         <<<<<<<<<<<<<<<<<<<<<<<<<<
 - rule 2: simple units (max 4 branch points)
  - (2, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

- method: create_big_header()
 > args: s
 - rule 1: short units (max 15 loc)
  - (8, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

- method: get_method_args()
 > args: args
 - rule 1: short units (max 15 loc)
  - (1, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

- method: create_separator()
 > args: s, sep="-"
 - rule 1: short units (max 15 loc)
  - (1, True)
 - rule 2: simple units (max 4 branch points)
  - (0, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (2, True)

- method: print_output()
 > args: path
 - rule 1: short units (max 15 loc)
  - (10, True)
 - rule 2: simple units (max 4 branch points)
  - (2, True)
 - rule 3: duplicates
  - #TODO
 - rule 4: small interfaces (max 4 params)
  - (1, True)

B. modules
--------------------------------------------------------------------------------
 - rule 5: loose coupling modules
  - #TODO
 - rule 6: loose coupling component architecture
  - #TODO



================================================================================
* C. Overall architecture checks
================================================================================
 - rule 7: balance components
  > a. max 9 files / components
  - (3, True)
  > b. +/- equally sized modules (max dev 0.71)
  - (0.2673434856175973, True)
 - rule 8: small code base (< 40K loc)
  - (197, True)

================================================================================
* D. Overall best practices checks
================================================================================
 - rule 9: test coverage
  - #TODO
 - rule 10: best practices
  - #TODO (if measurable)


================================================================================
* SUMMARY
================================================================================
1 warning to review
